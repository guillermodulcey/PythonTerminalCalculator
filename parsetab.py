
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEleftEXPleftCOSSENTANSECCSCCOTCOSHSENHTANHSECHCSCHCOTHleftDOTrightUMINUSCOMMA COS COSH COT COTH CSC CSCH DECIMAL DIVIDE DOT EQUALS EXP LOG LPAREN MINUS NAME NUMBER PLUS RPAREN SEC SECH SEN SENH TAN TANH TIMESstatement : NAME EQUALS expressionstatement : expressionexpression : expression DOT expressionexpression : LOG expression COMMA expressionexpression : LOG expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXP expression\n                  expression : COS expression\n                  | SEN expression\n                  | TAN expression\n                  | SEC expression\n                  | CSC expression\n                  | COT expression\n                  | COSH expression\n                  | SENH expression\n                  | TANH expression\n                  | SECH expression\n                  | CSCH expression\n                  | COTH expression\n                  expression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : NUMBERexpression : DECIMALexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[2,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LOG':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'COS':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'SEN':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'TAN':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'SEC':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'CSC':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'COT':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'COSH':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'SENH':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'TANH':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'SECH':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'CSCH':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'COTH':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,],[5,-27,24,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-25,-26,5,5,5,5,5,5,5,24,-27,-23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,24,24,-3,-6,-7,-8,-9,-10,5,-24,24,]),'LPAREN':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'NUMBER':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'DECIMAL':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'$end':([1,2,3,19,20,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,52,53,],[0,-27,-2,-25,-26,-5,-27,-23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-1,-3,-6,-7,-8,-9,-10,-24,-4,]),'EQUALS':([2,],[21,]),'DOT':([2,3,19,20,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,],[-27,22,-25,-26,22,-27,-23,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-3,22,22,22,22,22,-24,22,]),'PLUS':([2,3,19,20,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,],[-27,23,-25,-26,23,-27,-23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,23,23,-3,-6,-7,-8,-9,-10,-24,23,]),'TIMES':([2,3,19,20,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,],[-27,25,-25,-26,25,-27,-23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,25,25,-3,25,25,-8,-9,-10,-24,25,]),'DIVIDE':([2,3,19,20,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,],[-27,26,-25,-26,26,-27,-23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,26,26,-3,26,26,-8,-9,-10,-24,26,]),'EXP':([2,3,19,20,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,52,53,],[-27,27,-25,-26,27,-27,-23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,27,27,-3,27,27,27,27,-10,-24,27,]),'COMMA':([19,20,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,52,53,],[-25,-26,51,-27,-23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-3,-6,-7,-8,-9,-10,-24,-4,]),'RPAREN':([19,20,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,52,53,],[-25,-26,-5,-27,-23,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,52,-3,-6,-7,-8,-9,-10,-24,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,23,24,25,26,27,51,],[3,28,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',123),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',127),
  ('expression -> expression DOT expression','expression',3,'p_statement_decimal','calc.py',131),
  ('expression -> LOG expression COMMA expression','expression',4,'p_statement_logarithm','calc.py',136),
  ('expression -> LOG expression','expression',2,'p_statement_natural_logarithm','calc.py',140),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',144),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',145),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',146),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',147),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','calc.py',148),
  ('expression -> COS expression','expression',2,'p_expression_trig','calc.py',158),
  ('expression -> SEN expression','expression',2,'p_expression_trig','calc.py',159),
  ('expression -> TAN expression','expression',2,'p_expression_trig','calc.py',160),
  ('expression -> SEC expression','expression',2,'p_expression_trig','calc.py',161),
  ('expression -> CSC expression','expression',2,'p_expression_trig','calc.py',162),
  ('expression -> COT expression','expression',2,'p_expression_trig','calc.py',163),
  ('expression -> COSH expression','expression',2,'p_expression_trig','calc.py',164),
  ('expression -> SENH expression','expression',2,'p_expression_trig','calc.py',165),
  ('expression -> TANH expression','expression',2,'p_expression_trig','calc.py',166),
  ('expression -> SECH expression','expression',2,'p_expression_trig','calc.py',167),
  ('expression -> CSCH expression','expression',2,'p_expression_trig','calc.py',168),
  ('expression -> COTH expression','expression',2,'p_expression_trig','calc.py',169),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',188),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',192),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',196),
  ('expression -> DECIMAL','expression',1,'p_expression_decimal','calc.py',200),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',204),
]
